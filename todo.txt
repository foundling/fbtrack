TO-DO LIST
----------

features:

    - command to aggregate all data per subject into '<subect_id>-combined.json' file
        - move data/combine.js code to src/lib/io.js
    - update 'report' sub-command with new subject/participant models
    - 'report' sub-command to show:
        - subjects' registration date, date range collected (+ any missing dates) 
    - allow any valid date string to 'fbtrack query -d <start>...<stop>', not just '/' separator
    - let user pass subject id via cli to web (optional), by running 'fbt signup <subjectId>`. 
    - React app for data visualization
        - try basic plugin-architecture for end-user analysis
    - allow multiple studies

    - dates: restructure date query interface:
        - forget about '..' in between dates.
        - 'fbtrack query -d <start> <stop>' queries whole range, regardless of registration date
        - 'fbtrack query -d <stop>' uses registration_date as <start>

    - dates: log clearly which dates are being queried and why

    architectural changes:
        - cross operating system compatibilty. feasible?
        - put data directory in configurable 'userspace'
        - consider running fbtrack as a daemon

bugs:
    - 'fbtrack query -p -a' should throw, instead sets participant ids to ['-a']
    - study api: is allowing either a flat data dir or subject_id based data subdirs worth it?
    - handle edge case where '_' in participant id (possibly disallow this via FE/BE validation).
    - prevent refresh token errors. got a 400 invalid refresh token, with an old refresh token in db.

refactor:
    - validation logic in src/cli/validators.js is a bit hard to read.
    - rename database from <study_name>.sqlite to <study_name>.db.
    - restructure lib directory, organization of files doesn't make that much sense.
    - move src/models/Database.js to src/db/Database.js
    - move src/db/statements into their appropriate methods in src/db/Database.js
